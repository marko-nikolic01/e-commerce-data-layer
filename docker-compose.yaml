version: '2' 

services:

  data-generator:
    build:
      context: ./data_generator
    container_name: data-generator
    volumes:
      - ./data_generator/data/:/app/data/
      - ./data/:/app/generated_data/
    depends_on:
      - namenode
    networks:
      - shared_network
  
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    env_file:
      - ./hadoop/hadoop.env
    ports:
      - 9870:9870
      - 9000:9000
    networks:
      - shared_network

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    depends_on: 
      - namenode
    volumes:
      - hadoop_datanode1:/hadoop/dfs/data
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - shared_network

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    depends_on: 
      - namenode
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    env_file:
      - ./hadoop/hadoop.env
    networks:
      - shared_network
  
  hue:
    image: gethue/hue:20201111-135001
    hostname: hue
    container_name: hue
    dns: 8.8.8.8
    ports:
      - "8888:8888"
    volumes:
      - ./hadoop/hue/conf.dist:/usr/share/hue/desktop/conf
    depends_on: 
      - namenode
    networks:
      - shared_network

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    env_file:
      - ./hadoop/hadoop.env
      - ./hadoop/hive/server.env
    ports:
      - "10000:10000"
    networks:
      - shared_network
  
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop/hadoop.env
      - ./hadoop/hive/metastore.env
    command: /opt/hive/bin/hive --service metastore
    ports:
      - "9083:9083"
    networks:
      - shared_network
  
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    volumes:
      - hive-metastore-db:/var/lib/postgresql/data
    networks:
      - shared_network

  nifi:
    image: apache/nifi:1.15.3
    container_name: nifi
    ports:
      - "8443:8443"
    volumes:
      - ./data/:/tmp/data/
      - ./nifi/hdfs/core-site.xml:/opt/nifi/nifi-current/conf/core-site.xml
      - nifi_conf:/opt/nifi/nifi-current/conf
      - nifi_database_repository:/opt/nifi/nifi-current/database_repository
      - nifi_flowfile_repository:/opt/nifi/nifi-current/flowfile_repository
      - nifi_content_repository:/opt/nifi/nifi-current/content_repository
      - nifi_provenance_repository:/opt/nifi/nifi-current/provenance_repository
      - nifi_state:/opt/nifi/nifi-current/state
    env_file:
      - ./nifi/nifi.env
    networks:
      - shared_network

  nifi-registry:
    image: apache/nifi-registry:1.15.3
    container_name: nifi-registry
    ports:
      - "18080:18080"
    volumes:
      - nifi_registry:/opt/nifi-registry/nifi-registry-current/
    networks:
      - shared_network

  spark-master:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark-master
    ports:
      - "9090:8080"
      - "7077:7077"
      - "2222:22"
    env_file:
      - ./spark/spark.env
    volumes: 
      - ./spark/scripts:/opt/bitnami/spark/jobs
      - ./spark/hive/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
      - ./jenkins/logs:/opt/bitnami/spark/logs 
    networks:
      - shared_network

  spark-worker1:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark-worker1
    environment:
      - SPARK_MODE=worker
      - SPARK_WORKER_CORES=4
      - SPARK_WORKER_MEMORY=2g
      - SPARK_MASTER_URL=spark://spark-master:7077
    env_file:
      - ./spark/spark.env
    volumes: 
      - ./spark/scripts:/opt/bitnami/spark/jobs
      - ./spark/hive/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
      - ./jenkins/logs:/opt/bitnami/spark/logs 
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    networks:
      - shared_network

  spark-worker2:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark-worker2
    environment:
      - SPARK_MODE=worker
      - SPARK_WORKER_CORES=4
      - SPARK_WORKER_MEMORY=2g
      - SPARK_MASTER_URL=spark://spark-master:7077
    env_file:
      - ./spark/spark.env
    volumes: 
      - ./spark/scripts:/opt/bitnami/spark/jobs
      - ./spark/hive/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
      - ./jenkins/logs:/opt/bitnami/spark/logs 
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    networks:
      - shared_network

  spark-worker3:
    build:
      context: ./spark
      dockerfile: Dockerfile
    container_name: spark-worker3
    environment:
      - SPARK_MODE=worker
      - SPARK_WORKER_CORES=4
      - SPARK_WORKER_MEMORY=2g
      - SPARK_MASTER_URL=spark://spark-master:7077
    env_file:
      - ./spark/spark.env
    volumes: 
      - ./spark/scripts:/opt/bitnami/spark/jobs
      - ./spark/hive/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
      - ./jenkins/logs:/opt/bitnami/spark/logs 
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    networks:
      - shared_network

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./jenkins/configuration:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - shared_network

volumes:
  hadoop_namenode: {}
  hadoop_datanode1: {}
  hadoop_datanode2: {}
  hive-metastore-db: {}
  nifi_conf: {}
  nifi_database_repository: {}
  nifi_flowfile_repository: {}
  nifi_content_repository: {}
  nifi_provenance_repository: {}
  nifi_state: {}
  nifi_registry: {}

networks:
  shared_network:
    driver: bridge